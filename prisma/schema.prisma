// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id          String @id @default(cuid())
  fullName    String
  phoneNumber String
  email       String @unique
  password    String

  reviews     Review[]
  Reservation Reservation[]
  isAdmin     Boolean

  @@map("users")
}

model Review {
  id      String @id @default(cuid())
  rating  Int
  comment String
  userId  String
  user    User   @relation(fields: [userId], references: [id])

  @@map("reviews")
}

model Service {
  id            Int             @id @default(autoincrement())
  name          String
  description   String
  duration      Int
  Reservation   Reservation[]
  BranchService BranchService[]

  @@map("services")
}

model Branch {
  id            Int             @id @default(autoincrement())
  name          String
  location      String
  openingTime   DateTime
  closingTime   DateTime
  BranchService BranchService[]
  Reservation   Reservation[]

  @@map("branches")
}

model BranchService {
  id        Int     @id @default(autoincrement())
  branchId  Int
  branch    Branch  @relation(fields: [branchId], references: [id])
  serviceId Int
  service   Service @relation(fields: [serviceId], references: [id])

  @@map("branch_services")
}

model Reservation {
  id          Int      @id @default(autoincrement())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  name        String
  phoneNumber String
  serviceId   Int
  service     Service  @relation(fields: [serviceId], references: [id])
  branchId    Int
  branch      Branch   @relation(fields: [branchId], references: [id])
  date        DateTime
  time        DateTime

  @@map("reservations")
}
